Animation assets require gameobject
Avatar asset allows retargeting of humenoid animations
State in controller corresponds to an animation
Animations are assets based off gameobject

Root Motion- Tranform is applied on animation. Uncheck when movement is done from script.
Apply Root Motion moves the tranform to match the root of the animation
States and transitions of Animator Controller behave as a Finite State Machine

Foot IK- Keeps the animation grounded
Types of parameters in Transition of Animator Controller- Float, Int, Bool, Trigger

"Has Exit time" is set- transition will happen at an exact point in the animation cycle
Fixed Duration is set- Transition Duration is measured in seconds
Order of transition, first that is possible will be taken

A->B, Interruption:  
None- If state A and B can transition to C, then nothing happens
Current State- If state A and B can transition to C, then A will transition to C
Next State- If state B can transition to C, then transition is interrupted
Next State then Current State- If state A and B can transition to C, then B will transition to C

Any State- To avoid duplicate transition when they are required from every state
Cycle Offset- Shifts start point of animation
Downside of Any State is transition cannot be changed based on the state it is coming from
Mirror-n Animation gets flipped about axis of symmetry

Blend Trees can mix together Animations and Blend Trees
Blend Tree should be used when there are multiple animations that should all contribute
to varying degrees to the final result
State Machine parameters are responsible for controlling the blend in Blend Tree

2D Simple Directional- Only for directional movement (Moving left-right, not Turning left-right)
Simple Directinal cannot have more than one movement in the same direction
2D Freeform Directional- Allows multiple movements in the same direction
2D Freeform Cartesian- Any type of movement
Direct- Allows to independently tweak values and threshod for each and every parameter

Sub-State Machine should be used to simplify large state machine
State Machine Layer should be used to to run multiple animations at the same time
Encapsulation in State Machine- Sub-State Machine don't rely on the states of the parent vice versa



